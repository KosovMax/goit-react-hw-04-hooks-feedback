{"version":3,"sources":["components/FeedbackOptions/FeedbackOptions.js","components/Statistics/Statistics.js","components/Notification/Notification.js","components/Section/Section.js","components/App.js","index.js"],"names":["FeedbackOptions","options","onLeaveFeedback","className","map","id","type","name","onClick","defaultProps","Statistics","good","neutral","bad","total","positivePercentage","Notification","message","Section","title","useState","state","setState","countTotalFeedback","parseInt","prevState","parseFloat","toFixed","countPositiveFeedbackPercentage","App","ReactDOM","render","document","querySelector"],"mappings":"uQAIe,SAASA,EAAT,GAAwD,IAA7BC,EAA4B,EAA5BA,QAASC,EAAmB,EAAnBA,gBAC/C,OACI,qBAAKC,UAAU,eAAf,SACKF,EAAQG,KAAI,gBAAEC,EAAF,EAAEA,GAAIC,EAAN,EAAMA,KAAMC,EAAZ,EAAYA,KAAZ,OACT,wBAAQD,KAAK,SAAkBE,QAAS,kBAAMN,EAAgBI,IAA9D,SAAsEC,GAA3CF,QAM3CL,EAAgBS,aAAe,CAC3BR,QAAQ,I,MCVG,SAASS,EAAT,GAAsE,IAAjDC,EAAgD,EAAhDA,KAAMC,EAA0C,EAA1CA,QAASC,EAAiC,EAAjCA,IAAKC,EAA4B,EAA5BA,MAAOC,EAAqB,EAArBA,mBAC3D,OACI,8BACI,qBAAIZ,UAAU,aAAd,UACI,+BAAI,wCAAJ,KAAwBQ,KACxB,+BAAI,2CAAJ,KAA2BC,KAC3B,+BAAI,uCAAJ,KAAuBC,KACvB,+BAAI,yCAAJ,KAAyBC,KACzB,+BAAI,qDAAJ,KAAqCC,EAArC,YCVD,SAASC,EAAT,GAAiC,IAAVC,EAAS,EAATA,QAClC,OACI,6BAAKA,IDebP,EAAWD,aAAe,CACtBE,KAAM,EACNC,QAAS,EACTC,IAAK,EACLC,MAAM,EACNC,mBAAmB,GChBvBC,EAAaP,aAAe,CACxBQ,QAAS,qB,WCDE,SAASC,EAAT,GAAyC,IAAD,IAAtBC,aAAsB,MAAhB,eAAgB,IAEzBC,mBAAS,CAC/BT,KAAM,EACNC,QAAS,EACTC,IAAK,IAL0C,mBAE5CQ,EAF4C,KAErCC,EAFqC,KAY7CC,EAAqB,WAAO,IACvBZ,EAAsBU,EAAtBV,KAAMC,EAAgBS,EAAhBT,QAASC,EAAOQ,EAAPR,IACtB,OAAOW,SAASb,EAAOC,EAAUC,IAerC,OACI,qCACI,6BAAKM,IACL,cAAC,EAAD,CAAiBlB,QAASA,EAASC,gBAxBnB,SAACI,GACrBgB,GAAS,SAAAG,GAAS,kCAASA,GAAT,kBAAqBnB,EAAMe,EAAMf,GAAM,UAwBrD,uBAEA,4CACkB,IAAfe,EAAMV,MAAgC,IAAlBU,EAAMT,SAA+B,IAAdS,EAAMR,IAChD,cAAC,EAAD,CAAYF,KAAMU,EAAMV,KAAMC,QAASS,EAAMT,QAASC,IAAKQ,EAAMR,IAAKC,MAAOS,IAAsBR,mBApBvE,WAEpC,IAAMD,EAAQS,IACNZ,EAASU,EAATV,KAKR,OAAOe,YAHiB,IAAMZ,EACOH,GAERgB,QAAQ,IAY0FC,KACvH,cAACZ,EAAD,CAAcG,MAAM,yBC7CrB,SAASU,IACtB,OACE,cAACX,EAAD,CAASC,MAAM,0BCAnBW,IAASC,OAAO,cAACF,EAAD,IAAaG,SAASC,cAAc,W","file":"static/js/main.9f7adffa.chunk.js","sourcesContent":["import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport './FeedbackOptions.css'\r\n\r\nexport default function FeedbackOptions({ options, onLeaveFeedback }) {\r\n    return(\r\n        <div className=\"group-button\">\r\n            {options.map(({id, type, name}) => (\r\n                <button type=\"button\" key={id} onClick={() => onLeaveFeedback(type)}>{name}</button>\r\n            ))}\r\n        </div>\r\n    );\r\n}\r\n\r\nFeedbackOptions.defaultProps = {\r\n    options:[]\r\n}\r\nFeedbackOptions.propTypes = {\r\n    options: PropTypes.array.isRequired\r\n}\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nimport './Statistics.css';\r\n\r\nexport default function Statistics({good, neutral, bad, total, positivePercentage}) {\r\n    return(\r\n        <div>\r\n            <ul className=\"statistics\">\r\n                <li><span>Good</span>: {good}</li>\r\n                <li><span>Neutral</span>: {neutral}</li>\r\n                <li><span>bad</span>: {bad}</li>\r\n                <li><span>Total</span>: {total}</li>\r\n                <li><span>Positive feedback</span>: {positivePercentage}%</li>\r\n            </ul>\r\n        </div>\r\n    );\r\n}\r\n\r\n\r\nStatistics.defaultProps = {\r\n    good: 0,\r\n    neutral: 0,\r\n    bad: 0,\r\n    total:0,\r\n    positivePercentage:0\r\n}\r\n\r\nStatistics.propTypes = {\r\n    good: PropTypes.number.isRequired,\r\n    neutral:  PropTypes.number.isRequired,\r\n    bad: PropTypes.number.isRequired,\r\n    total: PropTypes.number.isRequired,\r\n    positivePercentage: PropTypes.number.isRequired\r\n}","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nexport default function Notification({message}){\r\n    return(\r\n        <h3>{message}</h3>\r\n    );\r\n}\r\n\r\nNotification.defaultProps = {\r\n    message: \"No feedback given\"\r\n}\r\n\r\nNotification.propTypes = {\r\n    message:PropTypes.string\r\n}\r\n","import React, { useState } from 'react';\r\n// import ReactDOM from 'react-dom';\r\n\r\nimport FeedbackOptions from './../FeedbackOptions/FeedbackOptions';\r\nimport Statistics from './../Statistics/Statistics';\r\nimport Notification from './../Notification/Notification'\r\n\r\nimport options from './../../json/options.json';\r\n\r\nexport default function Section({title=\"Section Name\"}){\r\n\r\n    const [state, setState] = useState({\r\n        good: 0,\r\n        neutral: 0,\r\n        bad: 0,\r\n    })\r\n\r\n    const onLeaveFeedback = (type) => {\r\n        setState(prevState => ({...prevState, [type]:state[type]+1})) \r\n    }\r\n\r\n    const countTotalFeedback = () => {\r\n        const {good, neutral, bad} = state;\r\n        return parseInt(good + neutral + bad);\r\n    }\r\n\r\n    const countPositiveFeedbackPercentage = () => {\r\n\r\n        const total = countTotalFeedback();\r\n        const { good } = state;\r\n    \r\n        const totslPercentage = 100 / total;\r\n        const percentage = totslPercentage * good;\r\n\r\n        return parseFloat(percentage.toFixed(0));\r\n    }\r\n\r\n\r\n    return(\r\n        <> \r\n            <h2>{title}</h2>\r\n            <FeedbackOptions options={options} onLeaveFeedback={onLeaveFeedback} />\r\n            <br/>\r\n\r\n            <h2>Statistics</h2>\r\n            { (state.good !== 0 || state.neutral !== 0 || state.bad !== 0) ? \r\n                <Statistics good={state.good} neutral={state.neutral} bad={state.bad} total={countTotalFeedback()} positivePercentage={countPositiveFeedbackPercentage()} /> :\r\n                <Notification title=\"No feedback given\" />\r\n                    \r\n            }\r\n        </>\r\n    );\r\n}","import Section from './Section/Section';\n\nexport default function App() {\n  return (\n    <Section title=\"Please leave feedback\" />\n  );\n}\n\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './components/App';\n\nReactDOM.render(<App></App>, document.querySelector('#root'));\n\n\n\n"],"sourceRoot":""}